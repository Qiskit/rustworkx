---
features:
  - |
    Added a new function :func:`~.all_pairs_all_simple_paths` which
    is used to return all simple paths between all pairs of nodes in a graph. It
    can also be used with a optional ``min_depth`` and ``cutoff`` parameters to
    filter the results based on path lengths. For example::

        from rustworkx.generators import grid_graph
        from rustworkx import all_pairs_all_simple_paths

        g = grid_graph(2, 3)
        paths = all_pairs_all_simple_paths(g, min_depth=3, cutoff=3)

    will return a dictionary of dictionaries where the 2 dictionary keys are the
    node indices and the inner value is the list of all simple paths of length
    3 between those 2 nodes.
  - |
    The rustworkx-core ``rustworkx_core::connectivity`` module has a new function
    ``all_simple_paths_multiple_targets`` this is similar to the
    ``all_simple_paths()`` method in petgraph's ``algo`` module but instead of
    returning an iterator that will yield the all the simple path from a source
    to the target node it instead will build a ``DictMap`` of all the simple
    paths from a source node to all targets in a provided ``HashSet`` of target
    node indices.
