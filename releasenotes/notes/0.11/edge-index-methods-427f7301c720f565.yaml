---
features:
  - |
    Added a new method, :meth:`~rustworkx.PyGraph.incident_edges`, to the
    :class:`~rustworkx.PyGraph` and :class:`~rustworkx.PyDiGraph` class. This
    method returns a list of edge indices for edges incident to a provided node.
  - |
    Added a new method, :meth:`~rustworkx.PyGraph.incident_edge_index_map`, to the
    :class:`~rustworkx.PyGraph` and :class:`~rustworkx.PyDiGraph` class. This
    method returns a mapping of edge indices for edges incident to a provided node
    to the endoint and weight tuple for that edge index. For example:

    .. jupyter-execute::

        import rustworkx
        graph = rustworkx.PyGraph()
        graph.extend_from_weighted_edge_list([(0, 1, "A"), (0, 2, "B")])
        print(graph.incident_edge_index_map(0))

  - |
    Added a new method, :meth:`~rustworkx.PyGraph.get_edge_data_by_index`,
    to the :class:`~rustworkx.PyGraph` and :class:`~rustworkx.PyDiGraph` classes.
    This method returns the data payload for an edge in the graph from its
    index.
  - |
    Added a new method, :meth:`~rustworkx.PyGraph.get_edge_endpoints_by_index`,
    to the :class:`~rustworkx.PyGraph` and :class:`~rustworkx.PyDiGraph` classes.
    This method returns the edge's endpoint tuple for an edge in the graph from
    its index.
  - |
    Added two new methods, :meth:`~rustworkx.PyGraph.out_edges` and
    :meth:`~rustworkx.PyGraph.in_edges` to the :class:`~rustworkx.PyGraph` class.
    These methods are the duals of the :class:`~rustworkx.PyDiGraph` methods,
    :meth:`~rustworkx.PyDiGraph.out_edges` and
    :meth:`~rustworkx.PyDiGraph.in_edges` and return a
    :class:`~rustworkx.WeightedEdgeList` of the incident edges for a node.
