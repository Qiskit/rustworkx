---
name: Wheel Builds
on:
  push:
    tags:
      - '*'
jobs:
  rustworkx-core:
    name: Publish rustworkx-core
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Run cargo publish
        run: |
          cd rustworkx-core
          cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
    needs: ["upload_shared_wheels"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.8'
      - name: Install deps
        run: pip install -U setuptools-rust
      - name: Build sdist
        run: python setup.py sdist
      - uses: actions/upload-artifact@v4
        with:
          path: ./dist/*
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    environment: release
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-14]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.8'
      - uses: dtolnay/rust-toolchain@stable
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.16.5
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: shared-wheel-builds
  upload_shared_wheels:
    name: Upload shared build wheels
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
    needs: ["build_wheels", "build-win32-wheels"]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: shared-wheel-builds
          path: deploy
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: deploy
  build_wheels_aarch64:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    environment: release
    permissions:
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.8'
      - uses: dtolnay/rust-toolchain@stable
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.16.5
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS_LINUX: aarch64
          CIBW_SKIP: cp36-* cp37-* cp311-* cp312-* pp* *musl*
      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: wheelhouse/
  build_wheels_aarch64_part_2:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    environment: release
    permissions:
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.8'
      - uses: dtolnay/rust-toolchain@stable
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.16.5
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS_LINUX: aarch64
          CIBW_SKIP: cp36-* cp37-* cp38-* cp39-* cp310-* pp* *musl*
      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: wheelhouse/
  build_wheels_musl_aarch64:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    environment: release
    permissions:
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.8'
      - uses: dtolnay/rust-toolchain@stable
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.16.5
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS_LINUX: aarch64
          CIBW_SKIP: cp36-* cp37-* cp311-* cp312-* *many*
          CIBW_TEST_SKIP: cp37-* cp38-* cp39-* cp310-* cp311-* cp312-* *many*
      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: wheelhouse/
  build_wheels_musl_aarch64_part_2:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    environment: release
    permissions:
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.8'
      - uses: dtolnay/rust-toolchain@stable
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.16.5
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS_LINUX: aarch64
          CIBW_SKIP: cp36-* cp37-* cp38-* cp39-* cp310-* *many*
          CIBW_TEST_SKIP: cp37-* cp38-* cp39-* cp310-* cp311-* cp312-* *many*
      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: wheelhouse/
  build_wheels_ppc64le:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    environment: release
    permissions:
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.8'
      - uses: dtolnay/rust-toolchain@stable
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.16.5
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_SKIP: cp36-* cp37-* cp39-* cp310-* cp311-* pp* *win32 *musl*
          CIBW_ARCHS_LINUX: ppc64le
      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: wheelhouse/
  build_wheels_ppc64le_part2:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    environment: release
    permissions:
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.8'
      - uses: dtolnay/rust-toolchain@stable
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.16.5
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_SKIP: cp36-* cp37-* cp38-* cp312-* pp* *win32 *musl*
          CIBW_ARCHS_LINUX: ppc64le
      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: wheelhouse/
  build_wheels_s390x:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    environment: release
    permissions:
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.8'
      - uses: dtolnay/rust-toolchain@stable
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.16.5
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_SKIP: cp36-* cp37-* cp39-* cp310-* cp311-* pp* *win32 *musl*
          CIBW_ARCHS_LINUX: s390x
      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: wheelhouse/
  build_wheels_s390x_part2:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    environment: release
    permissions:
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.8'
      - uses: dtolnay/rust-toolchain@stable
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.16.5
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_SKIP: cp36-* cp37-* cp38-* cp312-* pp* *win32 *musl*
          CIBW_ARCHS_LINUX: s390x
      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: wheelhouse/
  build-win32-wheels:
    name: Build wheels on win32
    runs-on: windows-latest
    environment: release
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.8'
          architecture: 'x86'
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: i686-pc-windows-msvc
      - name: Force win32 rust
        run: rustup default stable-i686-pc-windows-msvc
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.16.5
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_SKIP: cp36-* cp37-* pp* *amd64 *musl*
      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: shared-wheel-builds
  retworkx-compat-build:
    name: Build retworkx
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
    needs: ["upload_shared_wheels"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.10'
      - name: Install deps
        run: pip install -U setuptools-rust wheel build
      - name: Build sdist
        run: python setup.py bdist_wheel
        env:
          RUSTWORKX_PKG_NAME: retworkx
      - uses: actions/upload-artifact@v4
        with:
          path: ./dist/*
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
