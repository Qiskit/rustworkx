---
features:
  - |
    The :func:`~rustworkx.betweenness_centrality` (and it's per type variants
    :func:`~rustworkx.graph_betweenness_centrality` and
    :func:`~rustworkx.digraph_betweenness_centrality`) is now multithreaded.
    For larger graphs this can significantly improve the runtime performance of
    the function. By default any graphs with < 50 nodes will still execute
    in a single thread, while larger graphs will be executed in parallel.
    The size of the graph to start running in parallel can be adjusted using
    the new ``parallel_threshold`` kwarg. Additionally, the environment variable
    ``RAYON_NUM_THREADS`` can be used how many threads will be used when run in
    parallel. By default it will use a thread for each CPU on the local system.
