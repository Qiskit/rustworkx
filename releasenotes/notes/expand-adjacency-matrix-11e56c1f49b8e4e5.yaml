---
features:
  - |
    The functions :func:`~rustworkx.graph_adjacency_matrix` and :func:`~rustworkx.digraph_adjacency_matrix` now have the option to adjust parallel edge behavior. 
    Instead of just the default sum behavior, the value in the output matrix can be the minimum ("min"), maximum ("max"), or average ("avg") of the weights of the parallel edges.
    For example:

    .. jupyter-execute::

        import rustworkx as rx
        graph = rx.PyGraph()
        a = graph.add_node("A")
        b = graph.add_node("B")
        c = graph.add_node("C")

        graph.add_edges_from([
            (a, b, 3.0),
            (a, b, 1.0),
            (a, c, 2.0),
            (b, c, 7.0),
            (c, a, 1.0),
            (b, c, 2.0),
            (a, b, 4.0)
        ])

        print("Adjacency Matrix with Summed Parallel Edges")
        print(rx.graph_adjacency_matrix(graph, weight_fn= lambda x: float(x)))
        print("Adjacency Matrix with Averaged Parallel Edges")
        print(rx.graph_adjacency_matrix(graph, weight_fn= lambda x: float(x), parallel_edge="avg"))
      

   