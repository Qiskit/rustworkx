---
features:
  - |
    A new constructor method :meth:`~rustworkx.PyDiGraph.from_adjacency_matrix`
    has been added to the :class:`~rustworkx.PyDiGraph` and
    :class:`~rustworkx.PyGraph` (:meth:`~rustworkx.PyGraph.from_adjacency_matrix`)
    classes. It enables creating a new graph from an input adjacency_matrix.
    For example:

    .. jupyter-execute::

      import os
      import tempfile

      import numpy as np
      import pydot
      from PIL import Image

      import rustworkx


      # Adjacency matrix for directed outward star graph:
      adjacency_matrix = np.array([
          [0., 1., 1., 1., 1.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.]])
      # Create a graph from the adjacency_matrix:
      graph = rustworkx.PyDiGraph.from_adjacency_matrix(adjacency_matrix)
      # Draw graph
      dot_str = graph.to_dot(
          lambda node: dict(
          color='black', fillcolor='lightblue', style='filled'))
      dot = pydot.graph_from_dot_data(dot_str)[0]
      with tempfile.TemporaryDirectory() as tmpdirname:
          tmp_path = os.path.join(tmpdirname, 'dag.png')
          dot.write_png(tmp_path)
          image = Image.open(tmp_path)
          os.remove(tmp_path)
      image

