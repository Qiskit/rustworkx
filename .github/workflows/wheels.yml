---
name: Wheel Builds
on:
  pull_request:
    branches: [ main, 'stable/*' ]
jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build wheels
        uses: joerick/cibuildwheel@v2.11.2
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
  build_wheels_aarch64:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Build wheels
        uses: joerick/cibuildwheel@v2.11.2
        env:
          CIBW_ARCHS_LINUX: aarch64
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
  build_wheels_ppc64le:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Build wheels
        uses: joerick/cibuildwheel@v2.11.2
        env:
          CIBW_ARCHS_LINUX: ppc64le
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
  build_wheels_s390x:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Build wheels
        uses: joerick/cibuildwheel@v2.11.2
        env:
          CIBW_ARCHS_LINUX: s390x
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
  build-mac-arm-wheels:
    name: Build wheels on macos for arm and universal2
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
      - name: Build wheels
        uses: joerick/cibuildwheel@v2.11.2
        env:
          CIBW_BEFORE_ALL: rustup target add aarch64-apple-darwin
          CIBW_ARCHS_MACOS: arm64 universal2
          CIBW_ENVIRONMENT: CARGO_BUILD_TARGET="aarch64-apple-darwin" PYO3_CROSS_LIB_DIR="/Library/Frameworks/Python.framework/Versions/$(python -c 'import sys; print(str(sys.version_info[0])+"."+str(sys.version_info[1]))')/lib/python$(python -c 'import sys; print(str(sys.version_info[0])+"."+str(sys.version_info[1]))')"
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'
      - name: Install twine
        run: |
          python -m pip install twine
  build-win32-wheels:
    name: Build wheels on win32
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'
          architecture: 'x86'
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: i686-pc-windows-msvc
          default: true
      - name: Force win32 rust
        run: rustup default stable-i686-pc-windows-msvc
      - name: Build wheels
        uses: joerick/cibuildwheel@v2.11.2
        env:
          CIBW_SKIP: cp36-* pp* *amd64 *musl*
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
