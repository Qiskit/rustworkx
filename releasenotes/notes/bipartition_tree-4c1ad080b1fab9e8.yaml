---
features:
  - |
    Added a new function :func:`~.bipartition_tree` that takes in spanning tree
    and a list of populations assigned to each node in the tree and finds all
    balanced edges, if they exist. A balanced edge is defined as an edge that,
    when cut, will split the population of the tree into two connected subtrees
    that have population near the population target within some epsilon. The 
    function returns a list of all such possible cuts, represented as the set 
    of nodes in one partition/subtree. For example,

    .. code-block:: python

        balanced_node_choices = retworkx.bipartition_tree(
            tree,
            pops,
            float(pop_target),
            float(epsilon)
        )

    returns a list of tuples, with each tuple representing a distinct balanced
    edge that can be cut. The tuple contains the root of one of the two 
    partitioned subtrees and the set of nodes making up that subtree. The other
    partition can be recovered by computing the complement of the set of nodes.
